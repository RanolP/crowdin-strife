[package]
name = "crowdin_strife"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde_json = "1.0.67"

reqores = { path = "./reqores" }

bot_any = { path = "./bot_any" }
bot_any_platform_discord = { path = "./bot_any/bot_any_platform_discord" }

crowdin_client = { path = "./crowdin_client" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
worker = "0.0.10"
reqores_client_cf_worker = { path = "./reqores/reqores_client_cf_worker" }
reqores_server_cf_worker = { path = "./reqores/reqores_server_cf_worker" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.20.1", features = ["full"] }
reqores_client_surf = { path = "./reqores/reqores_client_surf" }
dotenvy = "0.15.1"
eyre = "0.6.8"
color-eyre = "0.6.2"

[[bin]]
name = "setup"
path = "src/setup.rs"


[profile.release]
opt-level = "s"
